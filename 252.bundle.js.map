{"version":3,"file":"252.bundle.js","mappings":"sKAGMA,EAAa,SAACC,EAAYC,GAC9B,GAAgB,aAAZA,EACF,GAAIC,OAAOC,OAAOH,GAAYI,SAAS,GAErC,IADA,IAAIC,EAAOH,OAAOG,KAAKL,GACdM,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACpC,IAAIE,EAAMH,EAAKC,GACfN,EAAWQ,GAAK,GAAK,EACrBC,SAASC,eAAeF,GAAKG,MAAMC,WAAa,mBAIlD,IADA,IAAIP,EAAOH,OAAOG,KAAKL,GACdM,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACpC,IAAIE,EAAMH,EAAKC,GACfN,EAAWQ,GAAO,EAClBC,SAASC,eAAeF,GAAKG,MAAMC,WACjC,+BAIsB,GAAxBZ,EAAWC,IACbD,EAAWC,GAAY,EACvBQ,SAASC,eAAeT,GAAUU,MAAMC,WACtC,4BAEFZ,EAAWC,GAAY,EACvBQ,SAASC,eAAeT,GAAUU,MAAMC,WAAa,gBAGzDC,EAAAA,EAAAA,GAAUb,IAuDZ,QApDwB,SAACc,GACvB,IAGIC,EAHAC,EAAU,GACRC,EAAYf,OAAOG,KAAKa,EAAAA,GACxBC,EAAeF,EAAUG,QAAQ,cAiCvC,OA7BA,WACE,IADW,eACFd,GACP,IAAIe,EAASJ,EAAUX,GAEnBA,EAAI,GAAKa,GACXH,EAAQM,MACN,gBAAKC,UAAU,MAAf,UACE,8CAGJR,EAAQ,4BAERA,EADST,EAAIa,EACL,2BAEA,2BAEVH,EAAQM,MACN,mBACEE,GAAIH,EACJI,QAAS,kBAAM1B,EAAWmB,EAAAA,EAAkBG,IAC5CE,UAAWR,EAHb,SAMGb,OAAOC,OAAOe,EAAAA,GAAkBD,EAAUG,QAAQC,IAAS,IAFvDA,KApBFf,EAAI,EAAGA,EAAIW,EAAUV,OAAQD,IAAK,EAAlCA,GADX,IA8BE,iCACE,mBACEkB,GAAG,UACHD,UAAU,aACVE,QAAS,kBAAM1B,EAAWmB,EAAAA,EAAkB,cAH9C,yBAOA,gBAAKK,UAAU,MAAf,UACE,+CAEDP","sources":["webpack://repo-search/./web/elements/LanguageButtons.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { active_languages, SendLangs } from \"./../active_languages.jsx\";\n\nconst updateLang = (dictionary, language) => {\n  if (language == \"all_langs\") {\n    if (Object.values(dictionary).includes(1)) {\n      let keys = Object.keys(dictionary);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        dictionary[key][0] = 0;\n        document.getElementById(key).style.background = \"transparent\";\n      }\n    } else {\n      let keys = Object.keys(dictionary);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        dictionary[key] = 1;\n        document.getElementById(key).style.background =\n          \"rgba(120, 120, 120, .2)\";\n      }\n    }\n  } else {\n    if (dictionary[language] == 0) {\n      dictionary[language] = 1;\n      document.getElementById(language).style.background =\n        \"rgba(120, 120, 120, .2)\";\n    } else {\n      dictionary[language] = 0;\n      document.getElementById(language).style.background = \"transparent\";\n    }\n  }\n  SendLangs(dictionary);\n}; //folde updateLang\n\nconst LanguageButtons = (props) => {\n  let Buttons = [];\n  const languages = Object.keys(active_languages);\n  const last_popular = languages.indexOf(\"typescript\"); // Manually Update if you add more popular languages after typescript\n  let Class;\n  //let active_languages = this.props.activeLangs;\n  //folds updateLang\n  (function () {\n    for (let i = 0; i < languages.length; i++) {\n      let langID = languages[i];\n\n      if (i - 1 == last_popular) {\n        Buttons.push(\n          <div className=\"all\">\n            <u>*All Languages*</u>\n          </div>\n        );\n        Class = \"langbutton alllangbutton\";\n      } else if (i > last_popular) {\n        Class = \"langbutton alllangbutton\";\n      } else {\n        Class = \"langbutton poplangbutton\";\n      }\n      Buttons.push(\n        <button\n          id={langID}\n          onClick={() => updateLang(active_languages, langID)}\n          className={Class}\n          key={langID}\n        >\n          {Object.values(active_languages)[languages.indexOf(langID)][1]}\n        </button>\n      );\n    }\n  })();\n\n  return (\n    <>\n      <button\n        id=\"langall\"\n        className=\"langbutton\"\n        onClick={() => updateLang(active_languages, \"all_langs\")}\n      >\n        Toggle All\n      </button>\n      <div className=\"pop\">\n        <u>Popular Languages</u>\n      </div>\n      {Buttons}\n    </>\n  );\n};\nexport default LanguageButtons;\n"],"names":["updateLang","dictionary","language","Object","values","includes","keys","i","length","key","document","getElementById","style","background","SendLangs","props","Class","Buttons","languages","active_languages","last_popular","indexOf","langID","push","className","id","onClick"],"sourceRoot":""}