{"version":3,"file":"252.bundle.js","mappings":"kRAGA,IAAMA,EAAa,SAACC,EAAYC,GAG9B,IAFA,IAAIC,EAAOC,OAAOD,KAAKF,GACnBI,EAAU,EACLC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAAK,CACpC,IAAIE,EAAML,EAAKG,GAEkB,eADlBG,SAASC,eAAeF,GAC1BG,MAAMC,aACjBP,EAAU,GAGd,GAAgB,aAAZH,EACF,GAAe,GAAXG,EACF,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAAK,CACpC,IAAIE,EAAML,EAAKG,GACfG,SAASC,eAAeF,GAAKG,MAAMC,WAAa,mBAIlD,IADA,IAAIT,EAAOC,OAAOD,KAAKF,GACdK,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAAK,CACpC,IAAIE,EAAML,EAAKG,GACfG,SAASC,eAAeF,GAAKG,MAAMC,WACjC,8BAIoD,eAAtDH,SAASC,eAAeR,GAAUS,MAAMC,WAC1CH,SAASC,eAAeR,GAAUS,MAAMC,WACtC,0BAEFH,SAASC,eAAeR,GAAUS,MAAMC,WAAa,eA0G3D,QArGwB,SAACC,GACvB,IAIIC,E,IAJJ,G,GAAkCC,EAAAA,EAAAA,UAAS,Q,EAA3C,E,8zBACIC,GADJ,UACc,IACRC,EAAYb,OAAOD,KAAKe,EAAAA,GACxBC,EAAeF,EAAUG,QAAQ,cAwBjCC,EAAe,WACmC,QAAlDZ,SAASC,eAAe,SAASC,MAAMW,QArB7B,WACd,IACE,IAAIhB,EAAIW,EAAUG,QAAQ,cAAgB,EAC1Cd,EAAIW,EAAUV,OACdD,IACA,CACA,IAAIiB,EAASN,EAAUX,GACvBG,SAASC,eAAea,GAAQZ,MAAMW,QAAU,QAgBhDE,GAbY,WACd,IACE,IAAIlB,EAAIW,EAAUG,QAAQ,cAAgB,EAC1Cd,EAAIW,EAAUV,OACdD,IACA,CACA,IAAIiB,EAASN,EAAUX,GACvBG,SAASC,eAAea,GAAQZ,MAAMW,QAAU,WAQhDG,IAoDJ,OA7BA,WACE,IADW,eACFnB,GACP,IAAIiB,EAASN,EAAUX,GAEnBA,EAAI,GAAKa,GACXH,EAAQU,MACN,gBAAKC,UAAU,MAAkBC,GAAG,MAAMC,QAASR,EAAnD,UACE,4CADwB,QAI5BP,EAAQ,4BAERA,EADSR,EAAIa,EACL,2BAEA,2BAEVH,EAAQU,MACN,mBACEE,GAAIL,EACJM,QAAS,kBAAM7B,EAAWkB,EAAAA,EAAkBK,IAC5CI,UAAWb,EAHb,SAMGV,OAAO0B,OAAOZ,EAAAA,GAAkBZ,IAF5BiB,KApBFjB,EAAI,EAAGA,EAAIW,EAAUV,OAAQD,IAAK,EAAlCA,GADX,IA8BE,iCACE,mBACEsB,GAAG,UACHD,UAAU,aACVE,QAAS,kBAAM7B,EAAWkB,EAAAA,EAAkB,cAH9C,yBAOA,gBAAKS,UAAU,MAAMC,GAAG,MAAMC,QA9ChB,WACoC,QAAhDpB,SAASC,eAAe,OAAOC,MAAMW,QAP3B,WACd,IAAK,IAAIhB,EAAI,EAAGA,EAAIW,EAAUG,QAAQ,cAAgB,EAAGd,IAAK,CAC5D,IAAIiB,EAASN,EAAUX,GACvBG,SAASC,eAAea,GAAQZ,MAAMW,QAAU,WAMhDS,GAfY,WACd,IAAK,IAAIzB,EAAI,EAAGA,EAAIW,EAAUG,QAAQ,cAAgB,EAAGd,IAAK,CAC5D,IAAIiB,EAASN,EAAUX,GACvBG,SAASC,eAAea,GAAQZ,MAAMW,QAAU,QAchDU,IAyCA,UACE,+CAEDhB","sources":["webpack://repo-search/./web/elements/LanguageButtons.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { active_languages, SendLangs } from \"./../active_languages.jsx\";\n\nconst updateLang = (dictionary, language) => {\n  let keys = Object.keys(dictionary);\n  let _active = 1;\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i];\n    let activeEl = document.getElementById(key);\n    if (activeEl.style.background == \"transparent\") {\n      _active = 0;\n    }\n  }\n  if (language == \"all_langs\") {\n    if (_active != 0) {\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        document.getElementById(key).style.background = \"transparent\";\n      }\n    } else {\n      let keys = Object.keys(dictionary);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        document.getElementById(key).style.background =\n          \"rgba(120, 120, 120, .2)\";\n      }\n    }\n  } else {\n    if (document.getElementById(language).style.background == \"transparent\") {\n      document.getElementById(language).style.background =\n        \"rgba(120, 120, 120, .2)\";\n    } else {\n      document.getElementById(language).style.background = \"transparent\";\n    }\n  }\n}; //folde updateLang\n\nconst LanguageButtons = (props) => {\n  const [invisible, setInvisible] = useState(\"none\");\n  let Buttons = [];\n  const languages = Object.keys(active_languages);\n  const last_popular = languages.indexOf(\"typescript\"); // Manually Update if you add more popular languages after typescript\n  let Class;\n  //let active_languages = this.props.activeLangs;\n  //folds updateLang\n  const hideAll = () => {\n    for (\n      let i = languages.indexOf(\"typescript\") + 1;\n      i < languages.length;\n      i++\n    ) {\n      let langID = languages[i];\n      document.getElementById(langID).style.display = \"none\";\n    }\n  };\n  const showAll = () => {\n    for (\n      let i = languages.indexOf(\"typescript\") + 1;\n      i < languages.length;\n      i++\n    ) {\n      let langID = languages[i];\n      document.getElementById(langID).style.display = \"initial\";\n    }\n  };\n  const toggleNotPop = () => {\n    if (document.getElementById(\"basic\").style.display != \"none\") {\n      //I'm sure basic will be around\n      hideAll();\n    } else {\n      showAll();\n    }\n  };\n  const hidePop = () => {\n    for (let i = 0; i < languages.indexOf(\"typescript\") + 1; i++) {\n      let langID = languages[i];\n      document.getElementById(langID).style.display = \"none\";\n    }\n  };\n  const showPop = () => {\n    for (let i = 0; i < languages.indexOf(\"typescript\") + 1; i++) {\n      let langID = languages[i];\n      document.getElementById(langID).style.display = \"initial\";\n    }\n  };\n  const togglePop = () => {\n    if (document.getElementById(\"c++\").style.display == \"none\") {\n      //I'm sure basic will be around\n      showPop();\n    } else {\n      hidePop();\n    }\n  };\n  (function () {\n    for (let i = 0; i < languages.length; i++) {\n      let langID = languages[i];\n\n      if (i - 1 == last_popular) {\n        Buttons.push(\n          <div className=\"all\" key={\"all\"} id=\"all\" onClick={toggleNotPop}>\n            <u>*All Languages*</u>\n          </div>\n        );\n        Class = \"langbutton alllangbutton\";\n      } else if (i > last_popular) {\n        Class = \"langbutton alllangbutton\";\n      } else {\n        Class = \"langbutton poplangbutton\";\n      }\n      Buttons.push(\n        <button\n          id={langID}\n          onClick={() => updateLang(active_languages, langID)}\n          className={Class}\n          key={langID}\n        >\n          {Object.values(active_languages)[i]}\n        </button>\n      );\n    }\n  })();\n\n  return (\n    <>\n      <button\n        id=\"langall\"\n        className=\"langbutton\"\n        onClick={() => updateLang(active_languages, \"all_langs\")}\n      >\n        Toggle All\n      </button>\n      <div className=\"pop\" id=\"pop\" onClick={togglePop}>\n        <u>Popular Languages</u>\n      </div>\n      {Buttons}\n    </>\n  );\n};\nexport default LanguageButtons;\n"],"names":["updateLang","dictionary","language","keys","Object","_active","i","length","key","document","getElementById","style","background","props","Class","useState","Buttons","languages","active_languages","last_popular","indexOf","toggleNotPop","display","langID","hideAll","showAll","push","className","id","onClick","values","showPop","hidePop"],"sourceRoot":""}